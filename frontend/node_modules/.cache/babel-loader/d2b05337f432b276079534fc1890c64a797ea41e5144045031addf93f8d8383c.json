{"ast":null,"code":"var _jsxFileName = \"/Users/nardortheaiwhisperer/Workspace/memecoin_trading_pro/frontend/src/contexts/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useEffect, useContext } from 'react';\nimport axios from 'axios';\n\n// Create context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\n\n// Custom hook to use the auth context\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [token, setToken] = useState(localStorage.getItem('authToken'));\n  const [loading, setLoading] = useState(true);\n\n  // Set up axios interceptor for auth headers\n  useEffect(() => {\n    const interceptor = axios.interceptors.request.use(config => {\n      if (token) {\n        config.headers.Authorization = `Bearer ${token}`;\n      }\n      return config;\n    }, error => {\n      return Promise.reject(error);\n    });\n\n    // Load user data if token exists\n    if (token) {\n      fetchUserProfile();\n    } else {\n      setLoading(false);\n    }\n    return () => {\n      axios.interceptors.request.eject(interceptor);\n    };\n  }, [token, fetchUserProfile]);\n\n  // Fetch user profile\n  const fetchUserProfile = async () => {\n    try {\n      const response = await axios.get('/api/users/profile');\n      setCurrentUser(response.data.user);\n      setLoading(false);\n    } catch (error) {\n      console.error('Error fetching user profile:', error);\n      logout();\n      setLoading(false);\n    }\n  };\n\n  // Register a new user\n  const register = async (username, email, password) => {\n    try {\n      const response = await axios.post('/api/users/register', {\n        username,\n        email,\n        password\n      });\n      const {\n        token,\n        user\n      } = response.data;\n      localStorage.setItem('authToken', token);\n      setToken(token);\n      setCurrentUser(user);\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Registration error:', error);\n      return {\n        success: false,\n        message: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Errore durante la registrazione'\n      };\n    }\n  };\n\n  // Login user\n  const login = async (email, password) => {\n    try {\n      const response = await axios.post('/api/users/login', {\n        email,\n        password\n      });\n      const {\n        token,\n        user\n      } = response.data;\n      localStorage.setItem('authToken', token);\n      setToken(token);\n      setCurrentUser(user);\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      console.error('Login error:', error);\n      return {\n        success: false,\n        message: ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Credenziali non valide'\n      };\n    }\n  };\n\n  // Logout user\n  const logout = () => {\n    localStorage.removeItem('authToken');\n    setToken(null);\n    setCurrentUser(null);\n  };\n\n  // Update user profile\n  const updateProfile = async userData => {\n    try {\n      const response = await axios.put('/api/users/profile', userData);\n      setCurrentUser(response.data.user);\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      console.error('Profile update error:', error);\n      return {\n        success: false,\n        message: ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || 'Errore durante l\\'aggiornamento del profilo'\n      };\n    }\n  };\n\n  // Change password\n  const changePassword = async (currentPassword, newPassword) => {\n    try {\n      const response = await axios.put('/api/users/change-password', {\n        currentPassword,\n        newPassword\n      });\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response4, _error$response4$data;\n      console.error('Password change error:', error);\n      return {\n        success: false,\n        message: ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.message) || 'Errore durante la modifica della password'\n      };\n    }\n  };\n\n  // Add wallet to user\n  const addWallet = async (name, address, blockchain) => {\n    try {\n      const response = await axios.post('/api/users/wallets', {\n        name,\n        address,\n        blockchain\n      });\n      setCurrentUser(prev => ({\n        ...prev,\n        wallets: response.data.wallets\n      }));\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response5, _error$response5$data;\n      console.error('Add wallet error:', error);\n      return {\n        success: false,\n        message: ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : (_error$response5$data = _error$response5.data) === null || _error$response5$data === void 0 ? void 0 : _error$response5$data.message) || 'Errore durante l\\'aggiunta del wallet'\n      };\n    }\n  };\n\n  // Remove wallet from user\n  const removeWallet = async walletId => {\n    try {\n      const response = await axios.delete(`/api/users/wallets/${walletId}`);\n      setCurrentUser(prev => ({\n        ...prev,\n        wallets: response.data.wallets\n      }));\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response6, _error$response6$data;\n      console.error('Remove wallet error:', error);\n      return {\n        success: false,\n        message: ((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : (_error$response6$data = _error$response6.data) === null || _error$response6$data === void 0 ? void 0 : _error$response6$data.message) || 'Errore durante la rimozione del wallet'\n      };\n    }\n  };\n  const value = {\n    currentUser,\n    token,\n    loading,\n    register,\n    login,\n    logout,\n    updateProfile,\n    changePassword,\n    addWallet,\n    removeWallet\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 194,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"8w3dZavtTwNTtsCV/SRS/T4Q26Y=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","axios","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","currentUser","setCurrentUser","token","setToken","localStorage","getItem","loading","setLoading","interceptor","interceptors","request","use","config","headers","Authorization","error","Promise","reject","fetchUserProfile","eject","response","get","data","user","console","logout","register","username","email","password","post","setItem","success","_error$response","_error$response$data","message","login","_error$response2","_error$response2$data","removeItem","updateProfile","userData","put","_error$response3","_error$response3$data","changePassword","currentPassword","newPassword","_error$response4","_error$response4$data","addWallet","name","address","blockchain","prev","wallets","_error$response5","_error$response5$data","removeWallet","walletId","delete","_error$response6","_error$response6$data","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/nardortheaiwhisperer/Workspace/memecoin_trading_pro/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect, useContext } from 'react';\nimport axios from 'axios';\n\n// Create context\nconst AuthContext = createContext();\n\n// Custom hook to use the auth context\nexport const useAuth = () => {\n  return useContext(AuthContext);\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState(null);\n  const [token, setToken] = useState(localStorage.getItem('authToken'));\n  const [loading, setLoading] = useState(true);\n\n  // Set up axios interceptor for auth headers\n  useEffect(() => {\n    const interceptor = axios.interceptors.request.use(\n      config => {\n        if (token) {\n          config.headers.Authorization = `Bearer ${token}`;\n        }\n        return config;\n      },\n      error => {\n        return Promise.reject(error);\n      }\n    );\n\n    // Load user data if token exists\n    if (token) {\n      fetchUserProfile();\n    } else {\n      setLoading(false);\n    }\n\n    return () => {\n      axios.interceptors.request.eject(interceptor);\n    };\n  }, [token, fetchUserProfile]);\n\n  // Fetch user profile\n  const fetchUserProfile = async () => {\n    try {\n      const response = await axios.get('/api/users/profile');\n      setCurrentUser(response.data.user);\n      setLoading(false);\n    } catch (error) {\n      console.error('Error fetching user profile:', error);\n      logout();\n      setLoading(false);\n    }\n  };\n\n  // Register a new user\n  const register = async (username, email, password) => {\n    try {\n      const response = await axios.post('/api/users/register', {\n        username,\n        email,\n        password,\n      });\n\n      const { token, user } = response.data;\n      localStorage.setItem('authToken', token);\n      setToken(token);\n      setCurrentUser(user);\n      return { success: true };\n    } catch (error) {\n      console.error('Registration error:', error);\n      return {\n        success: false,\n        message: error.response?.data?.message || 'Errore durante la registrazione',\n      };\n    }\n  };\n\n  // Login user\n  const login = async (email, password) => {\n    try {\n      const response = await axios.post('/api/users/login', {\n        email,\n        password,\n      });\n\n      const { token, user } = response.data;\n      localStorage.setItem('authToken', token);\n      setToken(token);\n      setCurrentUser(user);\n      return { success: true };\n    } catch (error) {\n      console.error('Login error:', error);\n      return {\n        success: false,\n        message: error.response?.data?.message || 'Credenziali non valide',\n      };\n    }\n  };\n\n  // Logout user\n  const logout = () => {\n    localStorage.removeItem('authToken');\n    setToken(null);\n    setCurrentUser(null);\n  };\n\n  // Update user profile\n  const updateProfile = async (userData) => {\n    try {\n      const response = await axios.put('/api/users/profile', userData);\n      setCurrentUser(response.data.user);\n      return { success: true };\n    } catch (error) {\n      console.error('Profile update error:', error);\n      return {\n        success: false,\n        message: error.response?.data?.message || 'Errore durante l\\'aggiornamento del profilo',\n      };\n    }\n  };\n\n  // Change password\n  const changePassword = async (currentPassword, newPassword) => {\n    try {\n      const response = await axios.put('/api/users/change-password', {\n        currentPassword,\n        newPassword,\n      });\n      return { success: true };\n    } catch (error) {\n      console.error('Password change error:', error);\n      return {\n        success: false,\n        message: error.response?.data?.message || 'Errore durante la modifica della password',\n      };\n    }\n  };\n\n  // Add wallet to user\n  const addWallet = async (name, address, blockchain) => {\n    try {\n      const response = await axios.post('/api/users/wallets', {\n        name,\n        address,\n        blockchain,\n      });\n      setCurrentUser(prev => ({\n        ...prev,\n        wallets: response.data.wallets,\n      }));\n      return { success: true };\n    } catch (error) {\n      console.error('Add wallet error:', error);\n      return {\n        success: false,\n        message: error.response?.data?.message || 'Errore durante l\\'aggiunta del wallet',\n      };\n    }\n  };\n\n  // Remove wallet from user\n  const removeWallet = async (walletId) => {\n    try {\n      const response = await axios.delete(`/api/users/wallets/${walletId}`);\n      setCurrentUser(prev => ({\n        ...prev,\n        wallets: response.data.wallets,\n      }));\n      return { success: true };\n    } catch (error) {\n      console.error('Remove wallet error:', error);\n      return {\n        success: false,\n        message: error.response?.data?.message || 'Errore durante la rimozione del wallet',\n      };\n    }\n  };\n\n  const value = {\n    currentUser,\n    token,\n    loading,\n    register,\n    login,\n    logout,\n    updateProfile,\n    changePassword,\n    addWallet,\n    removeWallet,\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {!loading && children}\n    </AuthContext.Provider>\n  );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}